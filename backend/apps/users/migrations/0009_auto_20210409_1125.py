# Generated by Django 3.1.6 on 2021-04-09 09:25

from django.db import migrations
from guardian.shortcuts import assign_perm, remove_perm
from django.contrib.auth import get_user_model

def assign_default_permission_for_existing_users(apps, schema_editor):
    User = get_user_model()
    Permission = apps.get_model("auth", "Permission")
    try:
        Permission.objects.get(codename="view_sensitive_info")
    except Permission.DoesNotExist:
        ContentType = apps.get_model("contenttypes", "ContentType")
        content_type = ContentType.objects.get_for_model(User)
        Permission.objects.create(
            codename="view_sensitive_info",
            name="Can view sensitive information about a user",
            content_type=content_type
        )
    for user in User.objects.all():
        assign_perm("users.view_sensitive_info", user_or_group=user, obj=user)

def remove_default_permission_for_existing_users(apps, schema_editor):
    User = get_user_model()
    Permission = apps.get_model("auth", "Permission")
    try:
        Permission.objects.get(codename="view_sensitive_info")
    except Permission.DoesNotExist:
        ContentType = apps.get_model("contenttypes", "ContentType")
        content_type = ContentType.objects.get_for_model(User)
        Permission.objects.create(
            codename="view_sensitive_info",
            name="Can view sensitive information about a user",
            content_type=content_type
        )
    for user in User.objects.all():
        remove_perm("users.view_sensitive_info", user_or_group=user, obj=user)
        try:
            Permission.objects.get(codename="view_sensitive_info").delete()
        except Permission.DoesNotExist:
            pass

class Migration(migrations.Migration):

    dependencies = [
        ('users', '0008_auto_20210327_1615'),
    ]

    operations = [
        migrations.RunPython(assign_default_permission_for_existing_users, remove_default_permission_for_existing_users)
    ]
