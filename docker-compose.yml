version: "3"

services:
  postgres:
    image: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - "5432:5432"
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/:cached

  backend:
    restart: always
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
      - DJANGO_DOT_ENV_FILES=.env,.env.development
    build:
      context: ./backend
      dockerfile: Dockerfile
    image: backend-image
    volumes:
      - ./backend:/usr/src/app
    ports:
      - "8000:8000"
    depends_on:
      - postgres

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
    expose:
      - 3000

  rabbitmq:
    image: rabbitmq:latest
    hostname: rabbitmq
    env_file:
      - ./backend/.env
    ports:
        - "5672:5672"
    logging:
     driver: none # Disables logging from the container

  celery_worker:
    environment:
      - DJANGO_READ_DOT_ENV_FILE=true
    env_file:
      - ./backend/.env
    image: backend-image
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - postgres
      - rabbitmq
      - backend
    entrypoint:
      - /usr/src/app/entrypoints/celery_worker.sh

  celery_beat:
    environment:
    - DJANGO_READ_DOT_ENV_FILE=true
    image: backend-image
    volumes:
      - ./backend:/usr/src/app
    depends_on:
      - postgres
      - rabbitmq
      - backend
    entrypoint: ["celery","-A","celery_worker","beat","-l","DEBUG","--pidfile="]

  celery_flower:
   environment:
    - DJANGO_READ_DOT_ENV_FILE=true
   env_file:
    - ./backend/.env
   image: backend-image
   volumes:
    - ./backend:/usr/src/app
   depends_on:
     - celery_worker
     - celery_beat
     - rabbitmq
   ports:
     - "5555:5555"
   entrypoint:
     - /usr/src/app/entrypoints/celery_flower.sh


volumes:
  postgres_data:
    driver: local
